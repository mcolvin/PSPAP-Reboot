datA[datA$reliability==0,]$aru<-0
length(which(is.na(datA$aru)))
datA$aru<-NA
datA[datA$reliability==0,]$aru<-0
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0 & datA$reliability<=0.1),]$aru<-"0 to 0.1"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.1 & datA$reliability<=0.2),]$aru<-"0.1 to 0.2"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.2 & datA$reliability<=0.3),]$aru<-"0.2 to 0.3"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.3 & datA$reliability<=0.4),]$aru<-"0.3 to 0.4"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.4 & datA$reliability<=0.5),]$aru<-"0.4 to 0.5"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.5 & datA$reliability<=0.6),]$aru<-"0.5 to 0.6"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.6 & datA$reliability<=0.7),]$aru<-"0.6 to 0.7"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.7 & datA$reliability<=0.8),]$aru<-"0.7 to 0.8"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.8 & datA$reliability<=0.9),]$aru<-"0.8 to 0.9"
length(which(is.na(datA$aru)))
length(which(datA$reliability==0))
length(which(datA$reliability>0 & datA$reliability<=0.1))
length(which(datA$reliability>0.1 & datA$reliability<=0.2))
length(which(datA$reliability>0.2 & datA$reliability<=0.3))
length(which(datA$reliability>0.3 & datA$reliability<=0.4))
length(which(datA$reliability>0.4 & datA$reliability<=0.5))
length(which(datA$reliability>0.5 & datA$reliability<=0.6))
length(which(datA$reliability>0.6 & datA$reliability<=0.7))
length(which(datA$reliability>0.7 & datA$reliability<=0.8))
length(which(datA$reliability>0.8 & datA$reliability<=0.9))
length(which(datA$reliability>0.9 & datA$reliability<=0.95))
length(which(datA$reliability>0.9 & datA$reliability<=0.98))
length(which(datA$reliability>0.9 & datA$reliability<=1))
length(which(datA$reliability>0.9 & datA$reliability<=0.995))
length(which(datA$reliability>0.995 & datA$reliability<=1))
datA$aru<-NA
datA[datA$reliability==0,]$aru<-0
datA[which(datA$reliability>0 & datA$reliability<=0.1),]$aru<-"0 to 0.1"
datA[which(datA$reliability>0.1 & datA$reliability<=0.2),]$aru<-"0.1 to 0.2"
datA[which(datA$reliability>0.2 & datA$reliability<=0.3),]$aru<-"0.2 to 0.3"
datA[which(datA$reliability>0.3 & datA$reliability<=0.4),]$aru<-"0.3 to 0.4"
datA[which(datA$reliability>0.4 & datA$reliability<=0.5),]$aru<-"0.4 to 0.5"
datA[which(datA$reliability>0.5 & datA$reliability<=0.6),]$aru<-"0.5 to 0.6"
datA[which(datA$reliability>0.6 & datA$reliability<=0.7),]$aru<-"0.6 to 0.7"
datA[which(datA$reliability>0.7 & datA$reliability<=0.8),]$aru<-"0.7 to 0.8"
datA[which(datA$reliability>0.8 & datA$reliability<=0.9),]$aru<-"0.8 to 0.9"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.9 & datA$reliability<=0.95),]$aru<-"0.9 to 0.995"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.995 & datA$reliability<=1),]$aru<-"0.995 to 1"
length(which(is.na(datA$aru)))
datA$aru<-NA
datA[datA$reliability==0,]$aru<-0
datA[which(datA$reliability>0 & datA$reliability<=0.1),]$aru<-"0 to 0.1"
datA[which(datA$reliability>0.1 & datA$reliability<=0.2),]$aru<-"0.1 to 0.2"
datA[which(datA$reliability>0.2 & datA$reliability<=0.3),]$aru<-"0.2 to 0.3"
datA[which(datA$reliability>0.3 & datA$reliability<=0.4),]$aru<-"0.3 to 0.4"
datA[which(datA$reliability>0.4 & datA$reliability<=0.5),]$aru<-"0.4 to 0.5"
datA[which(datA$reliability>0.5 & datA$reliability<=0.6),]$aru<-"0.5 to 0.6"
datA[which(datA$reliability>0.6 & datA$reliability<=0.7),]$aru<-"0.6 to 0.7"
datA[which(datA$reliability>0.7 & datA$reliability<=0.8),]$aru<-"0.7 to 0.8"
datA[which(datA$reliability>0.8 & datA$reliability<=0.9),]$aru<-"0.8 to 0.9"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.9 & datA$reliability<=0.995),]$aru<-"0.9 to 0.995"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.995 & datA$reliability<=1),]$aru<-"0.995 to 1"
length(which(is.na(datA$aru)))
datA<-datA[order(datA$samp_type,
datA$estimator,
datA$occasions,
datA$gear,
datA$q_in,
datA$B0_sd_in,
datA$rec,
datA$mov),]
datA$freq<-1
A_reli<-dcast(datA,samp_type+estimator+occasions+gear+q_in+B0_sd_in+rec+mov~aru,value.var="freq",
fun.aggregate=sum,drop=FALSE)
head(A_reli)
A_reli$samp_size<-rowSums(A_reli[,9:20])
head(A_reli)
A_reli[which(A_reli$samp_size!=0),9:20] <- A_reli[which(A_reli$samp_size!=0),9:20]/A_reli[which(A_reli$samp_size!=0),21]
head(A_reli)
A_reli<-A_reli[order(A_reli$samp_type,
A_reli$estimator,
A_reli$occasions,
A_reli$gear,
A_reli$q_in,
A_reli$B0_sd_in,
A_reli$rec,
A_reli$mov),]
write.csv(A_reli, "_output/4-tables/abund_reliability_cpt.csv", row.names = FALSE)
2.75/18
5/18
4.75/18
all(datA[datA$estimator=="CPUE",]$reliability==1)
2.75-2
0.75/18
3/18
2.75/18
0.3011479*4
0.3011479*5
2.75/18
4.75/18
5/18
0.75/18
2.75/18
3/18
head(datA)
datA$aru<-NA
head(datA)
datA[which(datA$reliability>=0 & datA$reliability<=0.005),]$aru<-"0 to 0.005"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.005 & datA$reliability<=0.1),]$aru<-"0.005 to 0.1"
length(which(is.na(datA$aru)))
datA[which(datA$reliability>0.1 & datA$reliability<=0.2),]$aru<-"0.1 to 0.2"
datA[which(datA$reliability>0.2 & datA$reliability<=0.3),]$aru<-"0.2 to 0.3"
datA[which(datA$reliability>0.3 & datA$reliability<=0.4),]$aru<-"0.3 to 0.4"
datA[which(datA$reliability>0.4 & datA$reliability<=0.5),]$aru<-"0.4 to 0.5"
datA[which(datA$reliability>0.5 & datA$reliability<=0.6),]$aru<-"0.5 to 0.6"
datA[which(datA$reliability>0.6 & datA$reliability<=0.7),]$aru<-"0.6 to 0.7"
datA[which(datA$reliability>0.7 & datA$reliability<=0.8),]$aru<-"0.7 to 0.8"
datA[which(datA$reliability>0.8 & datA$reliability<=0.9),]$aru<-"0.8 to 0.9"
datA[which(datA$reliability>0.9 & datA$reliability<=0.995),]$aru<-"0.9 to 0.995"
datA[which(datA$reliability>0.995 & datA$reliability<=1),]$aru<-"0.995 to 1"
length(which(is.na(datA$aru)))
datA<-datA[order(datA$samp_type,
datA$estimator,
datA$occasions,
datA$gear,
datA$q_in,
datA$B0_sd_in,
datA$rec,
datA$mov),]
datA$freq<-1
A_reli<-dcast(datA,samp_type+estimator+occasions+gear+q_in+B0_sd_in+rec+mov~aru,value.var="freq",
fun.aggregate=sum,drop=FALSE)
head(A_reli)
A_reli$samp_size<-rowSums(A_reli[,9:20])
A_reli[which(A_reli$samp_size!=0),9:20] <- A_reli[which(A_reli$samp_size!=0),9:20]/A_reli[which(A_reli$samp_size!=0),21]
head(A_reli)
A_reli<-A_reli[order(A_reli$samp_type,
A_reli$estimator,
A_reli$occasions,
A_reli$gear,
A_reli$q_in,
A_reli$B0_sd_in,
A_reli$rec,
A_reli$mov),]
write.csv(A_reli, "_output/4-tables/abund_reliability_cpt.csv", row.names = FALSE)
0.1527778*18-2
(0.1527778*18-2)/18
results<-read.csv("_output/overall_cost_and_utility.csv")
head(results)
rm(results)
head(datA)
datA$FO_4_Utility<-NA
head(datA)
datA[datA$estimator=="CPUE",]$FO_4_Utility<-2.75/18
head(datA)
unique(datA$estimator)
datA[datA$estimator=="CRDMS",]$FO_4_Utility<-5/18
tail(datA)
any(datA$estimator=="CRDMS")
head(which(datA$estimator=="CRDMS"))
datA[head(which(datA$estimator=="CRDMS")),]
datA[datA$estimator!="CPUE" & datA$estimator!="CRDMS",]$FO_4_Utility<-4.75/18
tail(datA)
length(which(is.na(datA$FO_4_Utility)))
datA$FO_4_Utility<- (datA$reliability*datA$FO_4_Utility+(1-datA$reliability)*(18*datA$FO_4_Utility-2)/18)
head(datA)
tail(datA)
datA$FO_4_Utility<- factor(as.character(datA$FO_4_Utility),
levels=c("0 to 0.005","0.005 to 0.1","0.1 to 0.2", "0.2 to 0.3",
"0.3 to 0.4","0.4 to 0.5", "0.5 to 0.6", "0.6 to 0.7",
"0.7 to 0.8","0.8 to 0.9","0.9 to 0.995","0.995 to 1"),
ordered=TRUE)
length(which(is.na(datA$FO_4_Utility)))
head(datA)
rm(list=ls(all=TRUE))
datT<-readRDS("_output/4-tables/trnd_table.rds")
datT<-datT[which(datT$gear %in% c("GN14", "TLC1", "TN")),]
datT<-datT[-which(datT$estimator=="CRDMS" & datT$occasions==4),]
datT[which(datT$reliability==0),]$trend_bias_utility<-0
datT[which(datT$reliability==0),]$trend_precision_utility<-0
datT$q_in<-NA
datT[datT$q_mean_input>0 & datT$q_mean_input<=0.0015,]$q_in<-"0 to 0.0015"
datT[datT$q_mean_input>0.0015 & datT$q_mean_input<=0.003,]$q_in<-"0.0015 to 0.003"
datT[datT$q_mean_input>0.003 & datT$q_mean_input<=0.0045,]$q_in<-"0.003 to 0.0045"
datT[datT$q_mean_input>0.0045 & datT$q_mean_input<=0.006,]$q_in<-"0.0045 to 0.006"
datT$B0_sd_in<-NA
datT[datT$B0_sd_input>0 & datT$B0_sd_input<=0.5,]$B0_sd_in<-"Low"
datT[datT$B0_sd_input>0.5 & datT$B0_sd_input<=1,]$B0_sd_in<-"Moderate"
datT[datT$B0_sd_input>1 & datT$B0_sd_input<=1.5,]$B0_sd_in<-"High"
datT$rec<-ifelse(datT$LB_recruit>0 | datT$UB_recruit>0, "Low", "None")
datT$mov<-ifelse(is.na(datT$mv_beta), "None","Little")
datT$tbu<-NA
datT[datT$trend_bias_utility==0,]$tbu<-0
datT[which(datT$trend_bias_utility>0 & datT$trend_bias_utility<=0.1),]$tbu<-"0 to 0.1"
datT[which(datT$trend_bias_utility>0.1 & datT$trend_bias_utility<=0.2),]$tbu<-"0.1 to 0.2"
datT[which(datT$trend_bias_utility>0.2 & datT$trend_bias_utility<=0.3),]$tbu<-"0.2 to 0.3"
datT[which(datT$trend_bias_utility>0.3 & datT$trend_bias_utility<=0.4),]$tbu<-"0.3 to 0.4"
datT[which(datT$trend_bias_utility>0.4 & datT$trend_bias_utility<=0.5),]$tbu<-"0.4 to 0.5"
datT[which(datT$trend_bias_utility>0.5 & datT$trend_bias_utility<=0.6),]$tbu<-"0.5 to 0.6"
datT[which(datT$trend_bias_utility>0.6 & datT$trend_bias_utility<=0.7),]$tbu<-"0.6 to 0.7"
datT[which(datT$trend_bias_utility>0.7 & datT$trend_bias_utility<=0.8),]$tbu<-"0.7 to 0.8"
datT[which(datT$trend_bias_utility>0.8 & datT$trend_bias_utility<=0.9),]$tbu<-"0.8 to 0.9"
datT[which(datT$trend_bias_utility>0.9 & datT$trend_bias_utility<=0.94),]$tbu<-"0.9 to 0.94"
datT[which(datT$trend_bias_utility>0.94 & datT$trend_bias_utility<=0.96),]$tbu<-"0.94 to 0.96"
datT[which(datT$trend_bias_utility>0.96 & datT$trend_bias_utility<=0.97),]$tbu<-"0.96 to 0.97"
datT[which(datT$trend_bias_utility>0.97 & datT$trend_bias_utility<=0.98),]$tbu<-"0.97 to 0.98"
datT[which(datT$trend_bias_utility>0.98 & datT$trend_bias_utility<=0.99),]$tbu<-"0.98 to 0.99"
datT[which(datT$trend_bias_utility>0.99 & datT$trend_bias_utility<=0.995),]$tbu<-"0.99 to 0.995"
datT[which(datT$trend_bias_utility>0.995 & datT$trend_bias_utility<=1),]$tbu<-"0.995 to 1"
datT$tpu<-NA
datT[which(datT$trend_precision_utility==0),]$tpu<-0
datT[which(datT$trend_precision_utility>0 & datT$trend_precision_utility<=0.1),]$tpu<-"0 to 0.1"
datT[which(datT$trend_precision_utility>0.1 & datT$trend_precision_utility<=0.2),]$tpu<-"0.1 to 0.2"
datT[which(datT$trend_precision_utility>0.2 & datT$trend_precision_utility<=0.3),]$tpu<-"0.2 to 0.3"
datT[which(datT$trend_precision_utility>0.3 & datT$trend_precision_utility<=0.4),]$tpu<-"0.3 to 0.4"
datT[which(datT$trend_precision_utility>0.4 & datT$trend_precision_utility<=0.5),]$tpu<-"0.4 to 0.5"
datT[which(datT$trend_precision_utility>0.5 & datT$trend_precision_utility<=0.6),]$tpu<-"0.5 to 0.6"
datT[which(datT$trend_precision_utility>0.6 & datT$trend_precision_utility<=0.7),]$tpu<-"0.6 to 0.7"
datT[which(datT$trend_precision_utility>0.7 & datT$trend_precision_utility<=0.8),]$tpu<-"0.7 to 0.8"
datT[which(datT$trend_precision_utility>0.8 & datT$trend_precision_utility<=0.9),]$tpu<-"0.8 to 0.9"
datT[which(datT$trend_precision_utility>0.9 & datT$trend_precision_utility<=0.94),]$tpu<-"0.9 to 0.94"
datT[which(datT$trend_precision_utility>0.94 & datT$trend_precision_utility<=0.96),]$tpu<-"0.94 to 0.96"
datT[which(datT$trend_precision_utility>0.96 & datT$trend_precision_utility<=0.97),]$tpu<-"0.96 to 0.97"
datT[which(datT$trend_precision_utility>0.97 & datT$trend_precision_utility<=0.98),]$tpu<-"0.97 to 0.98"
datT[which(datT$trend_precision_utility>0.98 & datT$trend_precision_utility<=0.99),]$tpu<-"0.98 to 0.99"
datT[which(datT$trend_precision_utility>0.99 & datT$trend_precision_utility<=1),]$tpu<-"0.99 to 1"
datT$freq<-1
datT$samp_type<- factor(as.character(datT$samp_type),
levels=c("f","r"),
ordered=TRUE)
datT$estimator<- factor(as.character(datT$estimator),
levels=c("CPUE","MKA_AM","MKA_WM","M0_AM","M0_WM", "Mt_AM",
"Mt_WM","CRDMS"),
ordered=TRUE)
datT$gear<- factor(as.character(datT$gear),
levels=c("TLC1","TN", "GN14"),
labels=c("Trotlines", "Trammel Nets", "Gill Nets"),
ordered=TRUE)
datT$q_in<- factor(as.character(datT$q_in),
levels=c("0 to 0.0015","0.0015 to 0.003","0.003 to 0.0045",
"0.0045 to 0.006"),
ordered=TRUE)
datT$B0_sd_in<- factor(as.character(datT$B0_sd_in),
levels=c("Low","Moderate","High"),
ordered=TRUE)
datT$rec<- factor(as.character(datT$rec),
levels=c("None","Low"),
ordered=TRUE)
datT$mov<- factor(as.character(datT$mov),
levels=c("None","Little"),
ordered=TRUE)
datT<-datT[order(datT$samp_type,
datT$estimator,
datT$occasions,
datT$gear,
datT$q_in,
datT$B0_sd_in,
datT$rec,
datT$mov),]
datA<-readRDS("_output/4-tables/BasinData/Replicates Averaged Over Year & Basin/Replicates_Basin_Abund.rds")
datA<-datA[which(datA$gear %in% c("GN14", "TLC1", "TN")),]
datA<-datA[-which(datA$estimator=="CRDMS" & datA$occasions==4),]
datA[which(datA$reliability==0),]$abund_bias_utility<-0
datA[which(datA$reliability==0),]$abund_prec_utility<-0
datCPUE<-datA[datA$estimator=="MKA_WM",]
datCPUE$estimator<-"CPUE"
datA<-rbind(datA,datCPUE)
rm(datCPUE)
datA$samp_type<- factor(as.character(datA$samp_type),
levels=c("f","r"),
ordered=TRUE)
datA$estimator<- factor(as.character(datA$estimator),
levels=c("CPUE","MKA_AM","MKA_WM","M0_AM","M0_WM", "Mt_AM",
"Mt_WM","CRDMS"),
ordered=TRUE)
datA$gear<- factor(as.character(datA$gear),
levels=c("TLC1","TN", "GN14"),
labels=c("Trotlines", "Trammel Nets", "Gill Nets"),
ordered=TRUE)
datA<-merge(datA, datT[, c("samp_type", "pop_id", "catch_id", "estimator", "occasions",
"gear", "q_in", "B0_sd_in", "rec", "mov")],
by=c("samp_type", "pop_id", "catch_id", "estimator", "occasions",
"gear"), all.x=TRUE)
datA$abu<-NA
datA[datA$abund_bias_utility==0,]$abu<-0
datA[which(datA$abund_bias_utility>0 & datA$abund_bias_utility<=0.1),]$abu<-"0 to 0.1"
datA[which(datA$abund_bias_utility>0.1 & datA$abund_bias_utility<=0.2),]$abu<-"0.1 to 0.2"
datA[which(datA$abund_bias_utility>0.2 & datA$abund_bias_utility<=0.3),]$abu<-"0.2 to 0.3"
datA[which(datA$abund_bias_utility>0.3 & datA$abund_bias_utility<=0.4),]$abu<-"0.3 to 0.4"
datA[which(datA$abund_bias_utility>0.4 & datA$abund_bias_utility<=0.5),]$abu<-"0.4 to 0.5"
datA[which(datA$abund_bias_utility>0.5 & datA$abund_bias_utility<=0.6),]$abu<-"0.5 to 0.6"
datA[which(datA$abund_bias_utility>0.6 & datA$abund_bias_utility<=0.7),]$abu<-"0.6 to 0.7"
datA[which(datA$abund_bias_utility>0.7 & datA$abund_bias_utility<=0.8),]$abu<-"0.7 to 0.8"
datA[which(datA$abund_bias_utility>0.8 & datA$abund_bias_utility<=0.9),]$abu<-"0.8 to 0.9"
datA[which(datA$abund_bias_utility>0.9 & datA$abund_bias_utility<=0.95),]$abu<-"0.9 to 0.95"
datA[which(datA$abund_bias_utility>0.95 & datA$abund_bias_utility<=1),]$abu<-"0.95 to 1"
datA$apu<-NA
datA[datA$abund_prec_utility==0,]$apu<-0
datA[which(datA$abund_prec_utility>0 & datA$abund_prec_utility<=0.1),]$apu<-"0 to 0.1"
datA[which(datA$abund_prec_utility>0.1 & datA$abund_prec_utility<=0.2),]$apu<-"0.1 to 0.2"
datA[which(datA$abund_prec_utility>0.2 & datA$abund_prec_utility<=0.3),]$apu<-"0.2 to 0.3"
datA[which(datA$abund_prec_utility>0.3 & datA$abund_prec_utility<=0.4),]$apu<-"0.3 to 0.4"
datA[which(datA$abund_prec_utility>0.4 & datA$abund_prec_utility<=0.5),]$apu<-"0.4 to 0.5"
datA[which(datA$abund_prec_utility>0.5 & datA$abund_prec_utility<=0.6),]$apu<-"0.5 to 0.6"
datA[which(datA$abund_prec_utility>0.6 & datA$abund_prec_utility<=0.7),]$apu<-"0.6 to 0.7"
datA[which(datA$abund_prec_utility>0.7 & datA$abund_prec_utility<=0.8),]$apu<-"0.7 to 0.8"
datA[which(datA$abund_prec_utility>0.8 & datA$abund_prec_utility<=0.9),]$apu<-"0.8 to 0.9"
datA[which(datA$abund_prec_utility>0.9 & datA$abund_prec_utility<=0.95),]$apu<-"0.9 to 0.95"
datA[which(datA$abund_prec_utility>0.95 & datA$abund_prec_utility<=0.98),]$apu<-"0.95 to 0.98"
datA[which(datA$abund_prec_utility>0.98 & datA$abund_prec_utility<=0.995),]$apu<-"0.98 to 0.995"
datA[which(datA$abund_prec_utility>0.995 & datA$abund_prec_utility<=1),]$apu<-"0.995 to 1"
datA$aru<-NA
datA[which(datA$reliability>=0 & datA$reliability<=0.005),]$aru<-"0 to 0.005"
datA[which(datA$reliability>0.005 & datA$reliability<=0.1),]$aru<-"0.005 to 0.1"
datA[which(datA$reliability>0.1 & datA$reliability<=0.2),]$aru<-"0.1 to 0.2"
datA[which(datA$reliability>0.2 & datA$reliability<=0.3),]$aru<-"0.2 to 0.3"
datA[which(datA$reliability>0.3 & datA$reliability<=0.4),]$aru<-"0.3 to 0.4"
datA[which(datA$reliability>0.4 & datA$reliability<=0.5),]$aru<-"0.4 to 0.5"
datA[which(datA$reliability>0.5 & datA$reliability<=0.6),]$aru<-"0.5 to 0.6"
datA[which(datA$reliability>0.6 & datA$reliability<=0.7),]$aru<-"0.6 to 0.7"
datA[which(datA$reliability>0.7 & datA$reliability<=0.8),]$aru<-"0.7 to 0.8"
datA[which(datA$reliability>0.8 & datA$reliability<=0.9),]$aru<-"0.8 to 0.9"
datA[which(datA$reliability>0.9 & datA$reliability<=0.995),]$aru<-"0.9 to 0.995"
datA[which(datA$reliability>0.995 & datA$reliability<=1),]$aru<-"0.995 to 1"
datA<-datA[order(datA$samp_type,
datA$estimator,
datA$occasions,
datA$gear,
datA$q_in,
datA$B0_sd_in,
datA$rec,
datA$mov),]
datA$freq<-1
datA$FO_4_Utility<-NA
datA[datA$estimator=="CPUE",]$FO_4_Utility<-2.75/18
datA[datA$estimator=="CRDMS",]$FO_4_Utility<-5/18
datA[datA$estimator!="CPUE" & datA$estimator!="CRDMS",]$FO_4_Utility<-4.75/18
datA$FO_4_Utility<- (datA$reliability*datA$FO_4_Utility+(1-datA$reliability)*(18*datA$FO_4_Utility-2)/18)
datA$aru<- factor(as.character(datA$aru),
levels=c("0 to 0.005","0.005 to 0.1","0.1 to 0.2", "0.2 to 0.3",
"0.3 to 0.4","0.4 to 0.5", "0.5 to 0.6", "0.6 to 0.7",
"0.7 to 0.8","0.8 to 0.9","0.9 to 0.995","0.995 to 1"),
ordered=TRUE)
length(which(is.na(datA$aru)))
head(datA)
datA<-datA[order(datA$estimator,
datA$aru),]
head(datA)
unique(datA$aru)
FO4<-dcast(datA, estimator+aru~FO_4_Utility,value.var="freq",
fun.aggregate=sum,drop=FALSE)
head(FO4)
datA$FO4_bins<-NA
length(which(is.na(datA$FO4_bins)))
datA[which(datA$FO_4_Utility>=0 & datA$FO_4_Utility<=0.1),]$FO4_bins<-"0 to 0.1"
which(datA$FO_4_Utility>=0 & datA$FO_4_Utility<=0.1)
datA[which(datA$FO_4_Utility>=0 & datA$FO_4_Utility<=0.1),]$FO4_bins<-"0 to 0.1"
if(length(which(datA$FO_4_Utility>=0 & datA$FO_4_Utility<=0.1))>0)
{datA[which(datA$FO_4_Utility>=0 & datA$FO_4_Utility<=0.1),]$FO4_bins<-"0 to 0.1"}
datA[which(datA$FO_4_Utility>0.1 & datA$FO_4_Utility<=0.2),]$FO4_bins<-"0.1 to 0.2"
datA[which(datA$FO_4_Utility>0.2 & datA$FO_4_Utility<=0.3),]$FO4_bins<-"0.2 to 0.3"
datA[which(datA$FO_4_Utility>0.3 & datA$FO_4_Utility<=0.4),]$FO4_bins<-"0.3 to 0.4"
length(which(is.na(datA$FO4_bins)))
min(datA$FO_4_Utility)
max(datA$FO_4_Utility)
datA$Scaled_FO4<-datA$FO_4_Utility/0.3
head(datA)
max(datA$Scaled_FO4)
min(datA$Scaled_FO4)
unique(datA$Scaled_FO4)
datA$FO4_bins<-NA
length(which(datA$Scaled_FO4>=0 & datA$Scaled_FO4<=0.1))>0
if(length(which(datA$Scaled_FO4>=0 & datA$Scaled_FO4<=0.1))>0)
{datA[which(datA$Scaled_FO4>=0 & datA$Scaled_FO4<=0.1),]$FO4_bins<-"0 to 0.1"}
length(which(is.na(datA$FO4_bins)))
length(which(datA$Scaled_FO4>=0.1 & datA$Scaled_FO4<=0.2))>0
if(length(which(datA$Scaled_FO4>=0.1 & datA$Scaled_FO4<=0.2))>0)
{datA[which(datA$Scaled_FO4>0.1 & datA$Scaled_FO4<=0.2),]$FO4_bins<-"0.1 to 0.2"}
length(which(datA$Scaled_FO4>=0.2 & datA$Scaled_FO4<=0.3))>0
if(length(which(datA$Scaled_FO4>=0.2 & datA$Scaled_FO4<=0.3))>0)
{datA[which(datA$Scaled_FO4>0.2 & datA$Scaled_FO4<=0.3),]$FO4_bins<-"0.2 to 0.3"}
length(which(datA$Scaled_FO4>=0.3 & datA$Scaled_FO4<=0.4))>0
if(length(which(datA$Scaled_FO4>=0.3 & datA$Scaled_FO4<=0.4))>0)
{datA[which(datA$Scaled_FO4>0.3 & datA$Scaled_FO4<=0.4),]$FO4_bins<-"0.3 to 0.4"}
length(which(is.na(datA$FO4_bins)))
length(which(datA$Scaled_FO4>=0.4 & datA$Scaled_FO4<=0.5))>0
if(length(which(datA$Scaled_FO4>=0.4 & datA$Scaled_FO4<=0.5))>0)
{datA[which(datA$Scaled_FO4>0.4 & datA$Scaled_FO4<=0.5),]$FO4_bins<-"0.4 to 0.5"}
length(which(is.na(datA$FO4_bins)))
length(which(datA$Scaled_FO4>=0.5 & datA$Scaled_FO4<=0.6))>0
if(length(which(datA$Scaled_FO4>=0.5 & datA$Scaled_FO4<=0.6))>0)
{datA[which(datA$Scaled_FO4>0.5 & datA$Scaled_FO4<=0.6),]$FO4_bins<-"0.5 to 0.6"}
length(which(is.na(datA$FO4_bins)))
length(which(datA$Scaled_FO4>=0.6 & datA$Scaled_FO4<=0.7))>0
if(length(which(datA$Scaled_FO4>=0.6 & datA$Scaled_FO4<=0.7))>0)
{datA[which(datA$Scaled_FO4>0.6 & datA$Scaled_FO4<=0.7),]$FO4_bins<-"0.6 to 0.7"}
length(which(is.na(datA$FO4_bins)))
if(length(which(datA$Scaled_FO4>=0.7 & datA$Scaled_FO4<=0.8))>0)
{datA[which(datA$Scaled_FO4>0.7 & datA$Scaled_FO4<=0.8),]$FO4_bins<-"0.7 to 0.8"}
length(which(is.na(datA$FO4_bins)))
if(length(which(datA$Scaled_FO4>=0.8 & datA$Scaled_FO4<=0.9))>0)
{datA[which(datA$Scaled_FO4>0.8 & datA$Scaled_FO4<=0.9),]$FO4_bins<-"0.8 to 0.9"}
length(which(is.na(datA$FO4_bins)))
if(length(which(datA$Scaled_FO4>=0.9 & datA$Scaled_FO4<=1))>0)
{datA[which(datA$Scaled_FO4>0.9 & datA$Scaled_FO4<=1),]$FO4_bins<-"0.9 to 0.1"}
length(which(is.na(datA$FO4_bins)))
datA$aru<- factor(as.character(datA$aru),
levels=c("0 to 0.005","0.005 to 0.1","0.1 to 0.2", "0.2 to 0.3",
"0.3 to 0.4","0.4 to 0.5", "0.5 to 0.6", "0.6 to 0.7",
"0.7 to 0.8","0.8 to 0.9","0.9 to 0.995","0.995 to 1"),
ordered=TRUE)
datA<-datA[order(datA$estimator,
datA$aru),]
head(datA)
any(is.na(datA$aru))
FO4<-dcast(datA, estimator+aru~FO4_bins,value.var="freq",
fun.aggregate=sum,drop=FALSE)
head(FO4)
if(length(which(datA$Scaled_FO4>=0.9 & datA$Scaled_FO4<=1))>0)
{datA[which(datA$Scaled_FO4>0.9 & datA$Scaled_FO4<=1),]$FO4_bins<-"0.9 to 1"}
FO4<-dcast(datA, estimator+aru~FO4_bins,value.var="freq",
fun.aggregate=sum,drop=FALSE)
head(FO4)
min(datA$FO_4_Utility)
datA$Scaled_FO4<-(datA$FO_4_Utility-0.15)/(0.3-0.15)
datA$FO4_bins<-NA
if(length(which(datA$Scaled_FO4>=0 & datA$Scaled_FO4<=0.1))>0)
{datA[which(datA$Scaled_FO4>=0 & datA$Scaled_FO4<=0.1),]$FO4_bins<-"0 to 0.1"}
if(length(which(datA$Scaled_FO4>=0.1 & datA$Scaled_FO4<=0.2))>0)
{datA[which(datA$Scaled_FO4>0.1 & datA$Scaled_FO4<=0.2),]$FO4_bins<-"0.1 to 0.2"}
if(length(which(datA$Scaled_FO4>=0.2 & datA$Scaled_FO4<=0.3))>0)
{datA[which(datA$Scaled_FO4>0.2 & datA$Scaled_FO4<=0.3),]$FO4_bins<-"0.2 to 0.3"}
if(length(which(datA$Scaled_FO4>=0.3 & datA$Scaled_FO4<=0.4))>0)
{datA[which(datA$Scaled_FO4>0.3 & datA$Scaled_FO4<=0.4),]$FO4_bins<-"0.3 to 0.4"}
if(length(which(datA$Scaled_FO4>=0.4 & datA$Scaled_FO4<=0.5))>0)
{datA[which(datA$Scaled_FO4>0.4 & datA$Scaled_FO4<=0.5),]$FO4_bins<-"0.4 to 0.5"}
if(length(which(datA$Scaled_FO4>=0.5 & datA$Scaled_FO4<=0.6))>0)
{datA[which(datA$Scaled_FO4>0.5 & datA$Scaled_FO4<=0.6),]$FO4_bins<-"0.5 to 0.6"}
if(length(which(datA$Scaled_FO4>=0.6 & datA$Scaled_FO4<=0.7))>0)
{datA[which(datA$Scaled_FO4>0.6 & datA$Scaled_FO4<=0.7),]$FO4_bins<-"0.6 to 0.7"}
if(length(which(datA$Scaled_FO4>=0.7 & datA$Scaled_FO4<=0.8))>0)
{datA[which(datA$Scaled_FO4>0.7 & datA$Scaled_FO4<=0.8),]$FO4_bins<-"0.7 to 0.8"}
if(length(which(datA$Scaled_FO4>=0.8 & datA$Scaled_FO4<=0.9))>0)
{datA[which(datA$Scaled_FO4>0.8 & datA$Scaled_FO4<=0.9),]$FO4_bins<-"0.8 to 0.9"}
if(length(which(datA$Scaled_FO4>=0.9 & datA$Scaled_FO4<=1))>0)
{datA[which(datA$Scaled_FO4>0.9 & datA$Scaled_FO4<=1),]$FO4_bins<-"0.9 to 1"}
length(which(is.na(datA$FO4_bins)))
datA$aru<- factor(as.character(datA$aru),
levels=c("0 to 0.005","0.005 to 0.1","0.1 to 0.2", "0.2 to 0.3",
"0.3 to 0.4","0.4 to 0.5", "0.5 to 0.6", "0.6 to 0.7",
"0.7 to 0.8","0.8 to 0.9","0.9 to 0.995","0.995 to 1"),
ordered=TRUE)
datA<-datA[order(datA$estimator,
datA$aru),]
FO4<-dcast(datA, estimator+aru~FO4_bins,value.var="freq",
fun.aggregate=sum,drop=FALSE)
head(FO4)
max(datA$Scaled_FO4)
max(datA$FO_4_Utility)
datA$Scaled_FO4<-(datA$FO_4_Utility-0.15)/(0.28-0.15)
datA$FO4_bins<-NA
if(length(which(datA$Scaled_FO4>=0 & datA$Scaled_FO4<=0.1))>0)
{datA[which(datA$Scaled_FO4>=0 & datA$Scaled_FO4<=0.1),]$FO4_bins<-"0 to 0.1"}
if(length(which(datA$Scaled_FO4>=0.1 & datA$Scaled_FO4<=0.2))>0)
{datA[which(datA$Scaled_FO4>0.1 & datA$Scaled_FO4<=0.2),]$FO4_bins<-"0.1 to 0.2"}
if(length(which(datA$Scaled_FO4>=0.2 & datA$Scaled_FO4<=0.3))>0)
{datA[which(datA$Scaled_FO4>0.2 & datA$Scaled_FO4<=0.3),]$FO4_bins<-"0.2 to 0.3"}
if(length(which(datA$Scaled_FO4>=0.3 & datA$Scaled_FO4<=0.4))>0)
{datA[which(datA$Scaled_FO4>0.3 & datA$Scaled_FO4<=0.4),]$FO4_bins<-"0.3 to 0.4"}
if(length(which(datA$Scaled_FO4>=0.4 & datA$Scaled_FO4<=0.5))>0)
{datA[which(datA$Scaled_FO4>0.4 & datA$Scaled_FO4<=0.5),]$FO4_bins<-"0.4 to 0.5"}
if(length(which(datA$Scaled_FO4>=0.5 & datA$Scaled_FO4<=0.6))>0)
{datA[which(datA$Scaled_FO4>0.5 & datA$Scaled_FO4<=0.6),]$FO4_bins<-"0.5 to 0.6"}
if(length(which(datA$Scaled_FO4>=0.6 & datA$Scaled_FO4<=0.7))>0)
{datA[which(datA$Scaled_FO4>0.6 & datA$Scaled_FO4<=0.7),]$FO4_bins<-"0.6 to 0.7"}
if(length(which(datA$Scaled_FO4>=0.7 & datA$Scaled_FO4<=0.8))>0)
{datA[which(datA$Scaled_FO4>0.7 & datA$Scaled_FO4<=0.8),]$FO4_bins<-"0.7 to 0.8"}
if(length(which(datA$Scaled_FO4>=0.8 & datA$Scaled_FO4<=0.9))>0)
{datA[which(datA$Scaled_FO4>0.8 & datA$Scaled_FO4<=0.9),]$FO4_bins<-"0.8 to 0.9"}
if(length(which(datA$Scaled_FO4>=0.9 & datA$Scaled_FO4<=1))>0)
{datA[which(datA$Scaled_FO4>0.9 & datA$Scaled_FO4<=1),]$FO4_bins<-"0.9 to 1"}
datA$aru<- factor(as.character(datA$aru),
levels=c("0 to 0.005","0.005 to 0.1","0.1 to 0.2", "0.2 to 0.3",
"0.3 to 0.4","0.4 to 0.5", "0.5 to 0.6", "0.6 to 0.7",
"0.7 to 0.8","0.8 to 0.9","0.9 to 0.995","0.995 to 1"),
ordered=TRUE)
datA<-datA[order(datA$estimator,
datA$aru),]
FO4<-dcast(datA, estimator+aru~FO4_bins,value.var="freq",
fun.aggregate=sum,drop=FALSE)
head(FO4)
min(datA$Scaled_FO4)
max(datA$Scaled_FO4)
unique(FO4)
unique(datA$Scaled_FO4)
head(FO4)
FO4$samp_size<-rowSums(FO4[,3:12])
head(FO4)
FO4[which(FO4$samp_size!=0),3:12] <- FO4[which(FO4$samp_size!=0),3:12]/FO4[which(FO4$samp_size!=0),13]
head(FO4)
tail(FO4)
FO4<-FO4[order(FO4$estimator,
FO4$aru),]
write.csv(FO4, "_output/4-tables/scaled_FO4_cpt.csv", row.names = FALSE)
